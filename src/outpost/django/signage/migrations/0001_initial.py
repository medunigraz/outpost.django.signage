# Generated by Django 2.2.28 on 2023-01-09 16:12

import datetime

import ckeditor_uploader.fields
import django.contrib.postgres.fields.ranges
import django.db.models.deletion
import django_extensions.db.fields
import outpost.django.base.utils
import outpost.django.signage.validators
import recurrence.fields
import shortuuid.django_fields
from django.db import (
    migrations,
    models,
)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("campusonline", "0067_country"),
        ("typo3", "0005_news_filter"),
        ("restaurant", "0003_auto_20220909_1544"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("video", "0043_auto_20220913_1004"),
    ]

    operations = [
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "runtime",
                    models.DurationField(default=datetime.timedelta(seconds=20)),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_signage.page_set+",
                        to="contenttypes.ContentType",
                    ),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="Power",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="Resolution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.PositiveIntegerField(blank=True, null=True)),
                ("height", models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "default",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="signage.Playlist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HTMLPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                ("content", models.TextField()),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="ImagePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to=outpost.django.base.utils.Uuid4Upload),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="MoviePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "movie",
                    models.FileField(upload_to=outpost.django.base.utils.Uuid4Upload),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="PDFPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "pdf",
                    models.FileField(
                        upload_to=outpost.django.base.utils.Uuid4Upload,
                        validators=[
                            outpost.django.signage.validators.PDFValidator(
                                orientation=outpost.django.signage.validators.PDFOrientation(
                                    0
                                ),
                                pages=range(1, 20),
                            )
                        ],
                    ),
                ),
                ("pages", models.PositiveSmallIntegerField(editable=False)),
                ("page_runtime", models.DurationField(blank=True, null=True)),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="RichTextPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                ("content", ckeditor_uploader.fields.RichTextUploadingField()),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="WebsitePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                ("url", models.URLField()),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="ScheduleItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("range", django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ("start", models.TimeField()),
                ("stop", models.TimeField()),
                ("recurrences", recurrence.fields.RecurrenceField()),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="signage.Playlist",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="signage.Schedule",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PowerItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("on", models.TimeField()),
                ("off", models.TimeField()),
                ("recurrences", recurrence.fields.RecurrenceField()),
                (
                    "power",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="signage.Power"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlaylistItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        db_index=True, editable=False, verbose_name="order"
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="signage.Page"
                    ),
                ),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="signage.Playlist",
                    ),
                ),
            ],
            options={
                "ordering": ("order",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Display",
            fields=[
                ("enabled", models.BooleanField(default=True)),
                ("online", models.BooleanField(default=False)),
                (
                    "id",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet=None,
                        editable=False,
                        length=10,
                        max_length=10,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("hostname", models.CharField(max_length=256)),
                ("username", models.CharField(max_length=128)),
                ("key", models.BinaryField()),
                ("dpi", models.PositiveIntegerField(blank=True, null=True)),
                ("connected", models.DateTimeField(editable=False, null=True)),
                (
                    "power",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="signage.Power",
                    ),
                ),
                (
                    "resolution",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="signage.Resolution",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="campusonline.Room",
                    ),
                ),
                (
                    "schedule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="signage.Schedule",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TYPO3NewsPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "news",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="typo3.News",
                    ),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="TYPO3EventPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="typo3.Event",
                    ),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="RestaurantPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                ("restaurants", models.ManyToManyField(to="restaurant.Restaurant")),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="LiveEventPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "livetemplate",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="video.LiveTemplate",
                    ),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
        migrations.CreateModel(
            name="CampusOnlineEventPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="signage.Page",
                    ),
                ),
                (
                    "building",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="campusonline.Building",
                    ),
                ),
            ],
            options={
                "get_latest_by": "modified",
                "abstract": False,
            },
            bases=("signage.page",),
        ),
    ]
